#!/usr/bin/env python
"""
ุญุฐู ุงูุฅุดุนุงุฑุงุช ุงูููุฑุฑุฉ
"""

import os
import sys
import django

# ุฅุนุฏุงุฏ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crm.settings')
django.setup()

from notifications.models import Notification
from django.db.models import Count
from django.utils import timezone
from datetime import timedelta

def clean_duplicate_notifications():
    """ุญุฐู ุงูุฅุดุนุงุฑุงุช ุงูููุฑุฑุฉ"""
    print("๐งน ุชูุธูู ุงูุฅุดุนุงุฑุงุช ุงูููุฑุฑุฉ")
    print("=" * 50)
    
    # ุงูุจุญุซ ุนู ุงูุฅุดุนุงุฑุงุช ุงูููุฑุฑุฉ
    duplicates = Notification.objects.values(
        'notification_type', 'content_type', 'object_id'
    ).annotate(
        count=Count('id')
    ).filter(count__gt=1)
    
    total_deleted = 0
    
    for duplicate in duplicates:
        # ุงูุญุตูู ุนูู ุฌููุน ุงูุฅุดุนุงุฑุงุช ุงูููุฑุฑุฉ
        notifications = Notification.objects.filter(
            notification_type=duplicate['notification_type'],
            content_type=duplicate['content_type'],
            object_id=duplicate['object_id']
        ).order_by('created_at')
        
        if notifications.count() > 1:
            # ุงูุงุญุชูุงุธ ุจุฃูู ุฅุดุนุงุฑ ูุญุฐู ุงูุจุงูู
            first_notification = notifications.first()
            duplicates_to_delete = notifications.exclude(id=first_notification.id)
            
            count = duplicates_to_delete.count()
            print(f"๐๏ธ ุญุฐู {count} ุฅุดุนุงุฑ ููุฑุฑ ูู ููุน: {duplicate['notification_type']}")
            
            duplicates_to_delete.delete()
            total_deleted += count
    
    print(f"\nโ ุชู ุญุฐู {total_deleted} ุฅุดุนุงุฑ ููุฑุฑ")
    
    # ุฅุญุตุงุฆูุงุช ููุงุฆูุฉ
    total_notifications = Notification.objects.count()
    print(f"๐ ุฅุฌูุงูู ุงูุฅุดุนุงุฑุงุช ุงููุชุจููุฉ: {total_notifications}")
    
    return total_deleted

def clean_old_notifications(days=30):
    """ุญุฐู ุงูุฅุดุนุงุฑุงุช ุงููุฏููุฉ"""
    print(f"\n๐งน ุญุฐู ุงูุฅุดุนุงุฑุงุช ุงูุฃูุฏู ูู {days} ููู")
    print("-" * 40)
    
    cutoff_date = timezone.now() - timedelta(days=days)
    old_notifications = Notification.objects.filter(created_at__lt=cutoff_date)
    
    count = old_notifications.count()
    if count > 0:
        old_notifications.delete()
        print(f"โ ุชู ุญุฐู {count} ุฅุดุนุงุฑ ูุฏูู")
    else:
        print("โ ูุง ุชูุฌุฏ ุฅุดุนุงุฑุงุช ูุฏููุฉ ููุญุฐู")
    
    return count

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    print("๐ ุชูุธูู ุงูุฅุดุนุงุฑุงุช")
    print("=" * 60)
    
    # ุชูุธูู ุงูุฅุดุนุงุฑุงุช ุงูููุฑุฑุฉ
    duplicates_deleted = clean_duplicate_notifications()
    
    # ุชูุธูู ุงูุฅุดุนุงุฑุงุช ุงููุฏููุฉ (ุงุฎุชูุงุฑู)
    # old_deleted = clean_old_notifications(30)
    
    print("\n" + "=" * 60)
    print("๐ ุชู ุชูุธูู ุงูุฅุดุนุงุฑุงุช ุจูุฌุงุญ!")
    print(f"๐ ุงูุฅุญุตุงุฆูุงุช:")
    print(f"  ๐๏ธ ุฅุดุนุงุฑุงุช ููุฑุฑุฉ ูุญุฐููุฉ: {duplicates_deleted}")
    # print(f"  ๐ ุฅุดุนุงุฑุงุช ูุฏููุฉ ูุญุฐููุฉ: {old_deleted}")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
