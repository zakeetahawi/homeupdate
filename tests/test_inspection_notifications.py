#!/usr/bin/env python
"""
ุงุฎุชุจุงุฑ ุฅุดุนุงุฑุงุช ุงููุนุงููุฉ
"""

import os
import sys
import django

# ุฅุนุฏุงุฏ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crm.settings')
django.setup()

from inspections.models import Inspection
from notifications.models import Notification
from django.contrib.auth import get_user_model

User = get_user_model()

def test_inspection_notifications():
    """ุงุฎุชุจุงุฑ ุฅุดุนุงุฑุงุช ุงููุนุงููุฉ"""
    print("๐งช ุงุฎุชุจุงุฑ ุฅุดุนุงุฑุงุช ุงููุนุงููุฉ")
    print("=" * 50)
    
    # ุงูุจุญุซ ุนู ูุนุงููุฉ ููุงุฎุชุจุงุฑ
    inspection = Inspection.objects.first()
    
    if not inspection:
        print("โ ูุง ุชูุฌุฏ ูุนุงููุงุช ููุงุฎุชุจุงุฑ")
        return False
    
    print(f"๐ ุงููุนุงููุฉ: {inspection.contract_number}")
    print(f"๐ ุงูุญุงูุฉ ุงูุญุงููุฉ: {inspection.status}")
    print(f"๐ ุฎูุงุฑุงุช ุงูุญุงูุฉ: {inspection.STATUS_CHOICES}")
    
    # ุนุฏ ุงูุฅุดุนุงุฑุงุช ูุจู ุงูุชุญุฏูุซ
    notifications_before = Notification.objects.count()
    print(f"๐ข ุนุฏุฏ ุงูุฅุดุนุงุฑุงุช ูุจู ุงูุชุญุฏูุซ: {notifications_before}")
    
    # ุชุญุฏูุซ ุญุงูุฉ ุงููุนุงููุฉ
    old_status = inspection.status
    new_status = 'completed' if old_status != 'completed' else 'pending'
    
    print(f"\n๐ ุชุญุฏูุซ ุญุงูุฉ ุงููุนุงููุฉ ูู '{old_status}' ุฅูู '{new_status}'")
    
    inspection.status = new_status
    inspection.save()
    
    # ุนุฏ ุงูุฅุดุนุงุฑุงุช ุจุนุฏ ุงูุชุญุฏูุซ
    notifications_after = Notification.objects.count()
    print(f"๐ข ุนุฏุฏ ุงูุฅุดุนุงุฑุงุช ุจุนุฏ ุงูุชุญุฏูุซ: {notifications_after}")
    
    # ุงูุชุญูู ูู ุงููุชุงุฆุฌ
    new_notifications_count = notifications_after - notifications_before
    print(f"๐ข ุฅุดุนุงุฑุงุช ุฌุฏูุฏุฉ: {new_notifications_count}")
    
    if new_notifications_count > 0:
        print("โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ!")
        
        # ุนุฑุถ ุงูุฅุดุนุงุฑุงุช ุงูุฌุฏูุฏุฉ
        new_notifications = Notification.objects.order_by('-created_at')[:new_notifications_count]
        for notif in new_notifications:
            print(f"  ๐ข {notif.title}")
            print(f"     {notif.message}")
            print(f"     ููุน: {notif.notification_type}")
            print(f"     ุฃููููุฉ: {notif.priority}")
        
        return True
    else:
        print("โ ูู ูุชู ุฅูุดุงุก ุฅุดุนุงุฑ!")
        
        # ูุญุต ุงูุณุจุจ
        print("\n๐ ูุญุต ุงูุฃุณุจุงุจ ุงููุญุชููุฉ:")
        
        # 1. ูุญุต ุฅุฐุง ูุงู ููุงู ุชุบููุฑ ูุนูู
        inspection.refresh_from_db()
        print(f"  1. ุงูุญุงูุฉ ุงูุฌุฏูุฏุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {inspection.status}")
        
        # 2. ูุญุต ุฅุฐุง ูุงู signal ููุนู
        from django.db.models.signals import pre_save
        from notifications.signals import inspection_status_changed_notification
        
        receivers = pre_save._live_receivers(sender=Inspection)
        signal_found = any('inspection_status_changed_notification' in str(receiver) for receiver in receivers)
        print(f"  2. Signal ููุนู: {signal_found}")
        
        # 3. ูุญุต ุงููุณุชุฎุฏููู ุงููุณุชูุฏููู
        from notifications.utils import get_notification_recipients
        recipients = get_notification_recipients('inspection_status_changed', inspection, None)
        print(f"  3. ุนุฏุฏ ุงููุณุชุฎุฏููู ุงููุณุชูุฏููู: {recipients.count()}")
        
        if recipients.exists():
            print(f"     ุงููุณุชุฎุฏููู: {[u.username for u in recipients[:5]]}")
        
        return False

def test_manual_notification():
    """ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฅุดุนุงุฑ ูุฏูู"""
    print("\n๐งช ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฅุดุนุงุฑ ูุฏูู")
    print("-" * 40)
    
    from notifications.signals import create_notification
    
    inspection = Inspection.objects.first()
    if not inspection:
        print("โ ูุง ุชูุฌุฏ ูุนุงููุงุช")
        return False
    
    try:
        notification = create_notification(
            title="ุงุฎุชุจุงุฑ ุฅุดุนุงุฑ ุงููุนุงููุฉ",
            message="ูุฐุง ุงุฎุชุจุงุฑ ูุฅุดุนุงุฑ ุงููุนุงููุฉ",
            notification_type='inspection_status_changed',
            related_object=inspection,
            priority='normal'
        )
        
        print(f"โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ูุฏูู: {notification.title}")
        return True
        
    except Exception as e:
        print(f"โ ูุดู ูู ุฅูุดุงุก ุงูุฅุดุนุงุฑ: {e}")
        return False

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    print("๐ ุงุฎุชุจุงุฑ ูุธุงู ุฅุดุนุงุฑุงุช ุงููุนุงููุฉ")
    print("=" * 60)
    
    # ุงุฎุชุจุงุฑ ุงูุชุญุฏูุซ ุงูุชููุงุฆู
    auto_success = test_inspection_notifications()
    
    # ุงุฎุชุจุงุฑ ุงูุฅูุดุงุก ุงููุฏูู
    manual_success = test_manual_notification()
    
    print("\n" + "=" * 60)
    print("๐ ุงููุชุงุฆุฌ:")
    print(f"  ๐ ุงูุชุญุฏูุซ ุงูุชููุงุฆู: {'โ ูุฌุญ' if auto_success else 'โ ูุดู'}")
    print(f"  โ ุงูุฅูุดุงุก ุงููุฏูู: {'โ ูุฌุญ' if manual_success else 'โ ูุดู'}")
    
    return auto_success or manual_success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
