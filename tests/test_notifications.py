#!/usr/bin/env python
"""
ุณูุฑูุจุช ูุงุฎุชุจุงุฑ ูุธุงู ุงูุฅุดุนุงุฑุงุช
"""
import os
import sys

import django

# ุฅุนุฏุงุฏ Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "crm.settings")
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
django.setup()

from django.contrib.auth import get_user_model

from customers.models import Customer
from notifications.signals import create_notification
from orders.models import Order

User = get_user_model()


def test_notifications():
    """ุงุฎุชุจุงุฑ ุฅูุดุงุก ุงูุฅุดุนุงุฑุงุช"""
    print("๐ ุงุฎุชุจุงุฑ ูุธุงู ุงูุฅุดุนุงุฑุงุช...")

    # ุงูุญุตูู ุนูู ุฃูู ูุณุชุฎุฏู
    user = User.objects.first()
    if not user:
        print("โ ูุง ููุฌุฏ ูุณุชุฎุฏููู ูู ุงููุธุงู")
        return

    print(f"โ ุชู ุงูุนุซูุฑ ุนูู ุงููุณุชุฎุฏู: {user.username}")

    # ุฅูุดุงุก ุฅุดุนุงุฑุงุช ุชุฌุฑูุจูุฉ
    notifications_data = [
        {
            "title": "ูุฑุญุจุงู ุจู ูู ูุธุงู ุงูุฅุดุนุงุฑุงุช",
            "message": "ุชู ุชูุนูู ูุธุงู ุงูุฅุดุนุงุฑุงุช ุงูุฌุฏูุฏ ุจูุฌุงุญ. ุณุชุชููู ุงูุขู ุฅุดุนุงุฑุงุช ููุฑูุฉ ุนู ุฌููุน ุงูุฃุญุฏุงุซ ุงููููุฉ ูู ุงููุธุงู.",
            "notification_type": "customer_created",
            "priority": "high",
        },
        {
            "title": "ุฅุดุนุงุฑ ุชุฌุฑูุจู - ุทูุจ ุฌุฏูุฏ",
            "message": "ูุฐุง ุฅุดุนุงุฑ ุชุฌุฑูุจู ูุญุงูู ุฅูุดุงุก ุทูุจ ุฌุฏูุฏ ูู ุงููุธุงู.",
            "notification_type": "order_created",
            "priority": "normal",
        },
        {
            "title": "ุฅุดุนุงุฑ ุชุฌุฑูุจู - ูุนุงููุฉ ููุชููุฉ",
            "message": "ุชู ุฅููุงู ูุนุงููุฉ ุชุฌุฑูุจูุฉ ุจูุฌุงุญ.",
            "notification_type": "inspection_status_changed",
            "priority": "high",
        },
        {
            "title": "ุฅุดุนุงุฑ ุนุงุฌู - ุดููู ุฌุฏูุฏุฉ",
            "message": "ุชู ุชุณุฌูู ุดููู ุฌุฏูุฏุฉ ุชุชุทูุจ ุงูุชูุงูุงู ููุฑูุงู.",
            "notification_type": "complaint_created",
            "priority": "urgent",
        },
        {
            "title": "ุฅุดุนุงุฑ ููุฎูุถ ุงูุฃููููุฉ",
            "message": "ูุฐุง ุฅุดุนุงุฑ ุชุฌุฑูุจู ููุฎูุถ ุงูุฃููููุฉ.",
            "notification_type": "installation_scheduled",
            "priority": "low",
        },
    ]

    created_count = 0
    for data in notifications_data:
        try:
            notification = create_notification(
                title=data["title"],
                message=data["message"],
                notification_type=data["notification_type"],
                created_by=user,
                priority=data["priority"],
                recipients=[user],
            )
            print(f"โ ุชู ุฅูุดุงุก ุงูุฅุดุนุงุฑ: {notification.title}")
            created_count += 1
        except Exception as e:
            print(f"โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฅุดุนุงุฑ: {e}")

    print(f"\n๐ ุชู ุฅูุดุงุก {created_count} ุฅุดุนุงุฑ ุจูุฌุงุญ!")

    # ุนุฑุถ ุฅุญุตุงุฆูุงุช
    from notifications.models import Notification, NotificationVisibility
    from notifications.utils import get_user_notification_count

    total_notifications = Notification.objects.count()
    user_notifications = Notification.objects.for_user(user).count()
    unread_count = get_user_notification_count(user)

    print(f"\n๐ ุฅุญุตุงุฆูุงุช ุงูุฅุดุนุงุฑุงุช:")
    print(f"   - ุฅุฌูุงูู ุงูุฅุดุนุงุฑุงุช: {total_notifications}")
    print(f"   - ุฅุดุนุงุฑุงุช ุงููุณุชุฎุฏู: {user_notifications}")
    print(f"   - ุบูุฑ ููุฑูุกุฉ: {unread_count}")


if __name__ == "__main__":
    test_notifications()
