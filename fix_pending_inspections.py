#!/usr/bin/env python
"""
ุณูุฑูุจุช ูุฅุตูุงุญ ุงููุนุงููุงุช ุงููุนููุฉ ูุฅุนุงุฏุฉ ุฌุฏููุฉ ุฑูุนูุง
"""

import os
import sys
import django
from datetime import datetime, timedelta

# ุฅุนุฏุงุฏ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crm.settings')
django.setup()

from inspections.models import Inspection
from orders.tasks import upload_inspection_to_drive_async
from django.utils import timezone

def fix_pending_inspections():
    """ุฅุตูุงุญ ุงููุนุงููุงุช ุงููุนููุฉ ูุฅุนุงุฏุฉ ุฌุฏููุฉ ุฑูุนูุง"""
    
    print("๐ ุงูุจุญุซ ุนู ุงููุนุงููุงุช ุงููุนููุฉ...")
    
    # ุงูุจุญุซ ุนู ุงููุนุงููุงุช ุงูุชู ูุฏููุง ูููุงุช ููู ูุชู ุฑูุนูุง
    pending_inspections = Inspection.objects.filter(
        inspection_file__isnull=False,
        is_uploaded_to_drive=False
    )
    
    print(f"๐ ุนุฏุฏ ุงููุนุงููุงุช ุงููุนููุฉ: {pending_inspections.count()}")
    
    if not pending_inspections.exists():
        print("โ ูุง ุชูุฌุฏ ูุนุงููุงุช ูุนููุฉ")
        return
    
    # ุนุฑุถ ุชูุงุตูู ุงููุนุงููุงุช ุงููุนููุฉ
    print("\n๐ ุงููุนุงููุงุช ุงููุนููุฉ:")
    for inspection in pending_inspections:
        print(f"  - ูุนุงููุฉ #{inspection.id}: {inspection.customer.name if inspection.customer else 'ุนููู ุฌุฏูุฏ'}")
        print(f"    ุงูุทูุจ: {inspection.order.order_number if inspection.order else 'ุบูุฑ ูุญุฏุฏ'}")
        print(f"    ุงูููู: {inspection.inspection_file.name if inspection.inspection_file else 'ูุง ููุฌุฏ'}")
        print(f"    ุชุงุฑูุฎ ุงูุฅูุดุงุก: {inspection.created_at}")
        print()
    
    # ุฅุนุงุฏุฉ ุฌุฏููุฉ ุงูุฑูุน
    print("๐ ุฅุนุงุฏุฉ ุฌุฏููุฉ ุฑูุน ุงููุนุงููุงุช...")
    
    success_count = 0
    error_count = 0
    
    for inspection in pending_inspections:
        try:
            # ุงูุชุญูู ูู ูุฌูุฏ ุงูููู ูุนููุงู
            if inspection.inspection_file and os.path.exists(inspection.inspection_file.path):
                # ุฌุฏููุฉ ุงููููุฉ
                task = upload_inspection_to_drive_async.delay(inspection.id)
                print(f"โ ุชู ุฌุฏููุฉ ุฑูุน ุงููุนุงููุฉ #{inspection.id} - Task ID: {task.id}")
                success_count += 1
            else:
                print(f"โ ุงููุนุงููุฉ #{inspection.id}: ุงูููู ุบูุฑ ููุฌูุฏ")
                error_count += 1
                
        except Exception as e:
            print(f"โ ุฎุทุฃ ูู ุฌุฏููุฉ ุงููุนุงููุฉ #{inspection.id}: {str(e)}")
            error_count += 1
    
    print(f"\n๐ ุงููุชุงุฆุฌ:")
    print(f"โ ุชู ุฌุฏููุฉ {success_count} ูุนุงููุฉ ุจูุฌุงุญ")
    print(f"โ ูุดู ูู {error_count} ูุนุงููุฉ")
    
    return success_count, error_count

def check_celery_status():
    """ูุญุต ุญุงูุฉ Celery"""
    print("๐ ูุญุต ุญุงูุฉ Celery...")
    
    try:
        from celery import current_app
        
        # ูุญุต ุงูุงุชุตุงู ูุน Redis
        inspect = current_app.control.inspect()
        
        # ุงูุญุตูู ุนูู ุงูุนูุงู ุงููุดุทูู
        active_workers = inspect.active()
        if active_workers:
            print("โ Celery Workers ูุดุทุฉ:")
            for worker, tasks in active_workers.items():
                print(f"  - {worker}: {len(tasks)} ูููุฉ ูุดุทุฉ")
        else:
            print("โ ูุง ุชูุฌุฏ Celery Workers ูุดุทุฉ")
        
        # ูุญุต ุงูููุงู ุงููุฌุฏููุฉ
        scheduled_tasks = inspect.scheduled()
        if scheduled_tasks:
            print("๐ ุงูููุงู ุงููุฌุฏููุฉ:")
            for worker, tasks in scheduled_tasks.items():
                print(f"  - {worker}: {len(tasks)} ูููุฉ ูุฌุฏููุฉ")
        
        # ูุญุต ููุงุฆู ุงูุงูุชุธุงุฑ
        reserved_tasks = inspect.reserved()
        if reserved_tasks:
            print("โณ ุงูููุงู ูู ูุงุฆูุฉ ุงูุงูุชุธุงุฑ:")
            for worker, tasks in reserved_tasks.items():
                print(f"  - {worker}: {len(tasks)} ูููุฉ ูู ุงูุงูุชุธุงุฑ")
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ูุญุต Celery: {str(e)}")

def main():
    print("๐ ุจุฏุก ุฅุตูุงุญ ุงููุนุงููุงุช ุงููุนููุฉ")
    print("=" * 50)
    
    # ูุญุต ุญุงูุฉ Celery
    check_celery_status()
    print()
    
    # ุฅุตูุงุญ ุงููุนุงููุงุช ุงููุนููุฉ
    try:
        success_count, error_count = fix_pending_inspections()
        
        if success_count > 0:
            print(f"\n๐ ุชู ุฌุฏููุฉ {success_count} ูุนุงููุฉ ูุฅุนุงุฏุฉ ุงูุฑูุน")
            print("โฐ ุณูุชู ุฑูุน ุงููููุงุช ุชููุงุฆูุงู ูู ุงูุฎูููุฉ")
            print("๐ ููููู ูุฑุงูุจุฉ ุงูุชูุฏู ูู ุฎูุงู:")
            print("   tail -f /tmp/celery_worker.log")
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชูููุฐ ุงูุฅุตูุงุญ: {str(e)}")
        sys.exit(1)
    
    print("\nโ ุงูุชูู ุงูุณูุฑูุจุช")

if __name__ == "__main__":
    main()
