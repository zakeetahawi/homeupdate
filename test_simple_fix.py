#!/usr/bin/env python3
"""
ุณูุฑูุจุช ุงุฎุชุจุงุฑ ูุจุณุท ูุฅุตูุงุญ ุญูู ุงููุนุงููุฉ ุงููุฑุชุจุทุฉ
"""
import os
import sys
import django

# ุฅุนุฏุงุฏ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'homeupdate.settings')
django.setup()

def test_form_choices():
    """ุงุฎุชุจุงุฑ ุจูุงุก ุฎูุงุฑุงุช ุงููููุฐุฌ"""
    print("๐ ุงุฎุชุจุงุฑ ุจูุงุก ุฎูุงุฑุงุช ุงููููุฐุฌ...")
    
    try:
        from customers.models import Customer
        from orders.forms import OrderForm
        
        # ุงูุจุญุซ ุนู ุนููู ููุฌูุฏ
        customer = Customer.objects.first()
        if not customer:
            print("โ ูุง ููุฌุฏ ุนููุงุก ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
            return
        
        print(f"โ ุชู ุงูุนุซูุฑ ุนูู ุนููู: {customer.name}")
        
        # ุฅูุดุงุก ูููุฐุฌ ูุน ุงูุนููู
        form = OrderForm(customer=customer)
        
        # ุทุจุงุนุฉ ุฎูุงุฑุงุช ุงููุนุงููุฉ ุงููุฑุชุจุทุฉ
        choices = form.fields['related_inspection'].choices
        print(f"โ ุนุฏุฏ ุฎูุงุฑุงุช ุงููุนุงููุฉ ุงููุฑุชุจุทุฉ: {len(choices)}")
        
        for i, (value, text) in enumerate(choices):
            print(f"   {i+1}. ุงููููุฉ: '{value}' | ุงููุต: '{text}'")
        
        print("\nโ ุชู ุงุฎุชุจุงุฑ ุจูุงุก ุงูุฎูุงุฑุงุช ุจูุฌุงุญ!")
        
    except Exception as e:
        print(f"โ ุญุฏุซ ุฎุทุฃ: {str(e)}")
        import traceback
        traceback.print_exc()

def test_api_response():
    """ุงุฎุชุจุงุฑ ุงุณุชุฌุงุจุฉ ุงูู API"""
    print("\n๐ ุงุฎุชุจุงุฑ ุงุณุชุฌุงุจุฉ ุงูู API...")
    
    try:
        from customers.models import Customer
        from inspections.models import Inspection
        
        # ุงูุจุญุซ ุนู ุนููู ูุน ูุนุงููุงุช
        customer = Customer.objects.first()
        if not customer:
            print("โ ูุง ููุฌุฏ ุนููุงุก ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
            return
        
        inspections = Inspection.objects.filter(customer=customer)
        if not inspections.exists():
            print(f"โ ูุง ุชูุฌุฏ ูุนุงููุงุช ููุนููู {customer.name}")
            return
        
        print(f"โ ุชู ุงูุนุซูุฑ ุนูู {inspections.count()} ูุนุงููุฉ ููุนููู {customer.name}")
        
        # ูุญุงูุงุฉ ุงุณุชุฌุงุจุฉ ุงูู API
        inspection_choices = [
            {'value': 'customer_side', 'text': 'ุทุฑู ุงูุนููู'}
        ]
        
        for inspection in inspections:
            inspection_choices.append({
                'value': str(inspection.id),
                'text': f"{inspection.customer.name} - {inspection.contract_number or f'ูุนุงููุฉ {inspection.id}'} - {inspection.created_at.strftime('%Y-%m-%d')}"
            })
        
        print(f"โ ุชู ุจูุงุก {len(inspection_choices)} ุฎูุงุฑ ูู ุงูู API")
        for i, choice in enumerate(inspection_choices):
            print(f"   {i+1}. ุงููููุฉ: '{choice['value']}' | ุงููุต: '{choice['text']}'")
        
        print("\nโ ุชู ุงุฎุชุจุงุฑ ุงูู API ุจูุฌุงุญ!")
        
    except Exception as e:
        print(f"โ ุญุฏุซ ุฎุทุฃ: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    print("๐ ุจุฏุก ุงุฎุชุจุงุฑ ุฅุตูุงุญ ุญูู ุงููุนุงููุฉ ุงููุฑุชุจุทุฉ...")
    test_form_choices()
    test_api_response()
    print("\nโ ุชู ุฅููุงู ุฌููุน ุงูุงุฎุชุจุงุฑุงุช!") 